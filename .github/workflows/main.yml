name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        run: sudo apt-get update && sudo apt-get install -y openjdk-17-jdk

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV

      - name: Verify Java version
        run: java -version

      - name: Run Lint
        run: ./gradlew lintDebug

      - name: Generate HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: lint.html
          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        run: sudo apt-get update && sudo apt-get install -y openjdk-17-jdk

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV

      - name: Verify Java version
        run: java -version

      - name: Run Tests
        run: ./gradlew test

      - name: Generate HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: unit_test.report
          path: app/build/reports/tests/testDebugUnitTest/


  instrumentation-test:
    needs: [ unit-test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        run: sudo apt-get update && sudo apt-get install -y openjdk-17-jdk

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV

      - name: Verify Java version
        run: java -version

      - name: Run espresso tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedCheck

      - name: Upload test Report
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation_test.report
          path: app/build/reports/androidTests/connected/


  package:
    needs: [instrumentation-test]
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        run: sudo apt-get update && sudo apt-get install -y openjdk-17-jdk

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV

      - name: Verify Java version
        run: java -version

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: barber-shop.apk
          path: app/build/outputs/apk/debug/app-debug.apk

  deploy:
    needs: [package]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Decrypt Firebase service account
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: echo $FIREBASE_SERVICE_ACCOUNT > ${HOME}/firebase-service-account.json

      - name: Authenticate to Firebase
        run: firebase auth:login:ci --token "$(cat ${HOME}/firebase-service-account.json | jq -r .token)"

      - name: Run tests on Firebase Test Lab
        run: |
          firebase test android run \
            --type instrumentation \
            --app app/build/outputs/apk/debug/app-debug.apk \
            --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
            --device model=Pixel2,version=28,locale=en,orientation=portrait

      - name: Deploy to Firebase App Distribution
        if: success()
        env:
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        run: |
          firebase appdistribution:distribute app/build/outputs/apk/debug/app-debug.apk \
            --app $FIREBASE_APP_ID \
            --groups testers
